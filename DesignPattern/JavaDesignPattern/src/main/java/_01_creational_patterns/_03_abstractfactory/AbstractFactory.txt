* 추상 팩토리 패턴
- 서로 관련있는 여러 객체를 만들어주는 인터페이스 (팩토리를 추상화된 형태로 정의하여 서로 관련있는 여러 객체를 만들어주는것을 의미함)
- 구체적인 팩토리에서 구체적인 인스턴스를 만드는것까지는 팩토리메서드 패턴과 굉장히 유사하지만, 초점이 Client 쪽에 초점이 맞추어져있는 것임.
- 팩토리에서 어떠한 인스턴스를 만들어서 쓰는 그 코드를 인터페이스 기반으로 코딩을 할 수 있도록 도와주는 패턴
**구체적으로 어떤 클래스의 인스턴스를 사용하는지 감출 수 있다.**


* 그렇다면 팩토리 메서드 패턴과 추상 팩토리 패턴의 공통점과 차이점은?

공통점:
    1. 둘 다 구체적인 객체 생성 과정을 추상화한 인터페이스를 제공한다.

차이점:
    1. 관점이 다름
        1. 팩토리 메서드 패턴은 "팩토리를 구현하는 방법 (Inheritance)" 에 초점을 둔다.
        2. 추상 팩토리 패턴은 "팩토리를 사용하는 방법 (composition)" 에 초점을둔다.
    2. 목적이 조금 다름
        1. 팩토리 메서드 패턴은 구체적인 객체 생성 과정을 하위 또는 구체적인 클래스로 옮기는것이 목적
        2. 추상 팩토리 패턴은 관련있는 여러 객체를 구체적인 클래스에 의존하지 않고 만들 수 있게 해주는 것이 목적

